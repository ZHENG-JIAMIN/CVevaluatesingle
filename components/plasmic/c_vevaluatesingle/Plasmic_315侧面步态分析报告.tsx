// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rXnSEQkb737qyHw1C9ru8K
// Component: NW79QQiJt004

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import TextInput from "../../TextInput"; // plasmic-import: ak1PNxJxzQTi/component
import Select from "../../Select"; // plasmic-import: n7JvdYF5lgb0/component
import { AntdDatePicker } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { datePickerHelpers as AntdDatePicker_Helpers } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { RichTable } from "@plasmicpkgs/plasmic-rich-components/skinny/rich-table";
import { tableHelpers as RichTable_Helpers } from "@plasmicpkgs/plasmic-rich-components/skinny/rich-table";
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: rXnSEQkb737qyHw1C9ru8K/projectcss
import sty from "./Plasmic_315侧面步态分析报告.module.css"; // plasmic-import: NW79QQiJt004/css

import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: Ay6p5UhDt4_0/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: rULndZmTo01d/icon

createPlasmicElementProxy;

export type Plasmic_315侧面步态分析报告__VariantMembers = {};
export type Plasmic_315侧面步态分析报告__VariantsArgs = {};
type VariantPropType = keyof Plasmic_315侧面步态分析报告__VariantsArgs;
export const Plasmic_315侧面步态分析报告__VariantProps =
  new Array<VariantPropType>();

export type Plasmic_315侧面步态分析报告__ArgsType = {};
type ArgPropType = keyof Plasmic_315侧面步态分析报告__ArgsType;
export const Plasmic_315侧面步态分析报告__ArgProps = new Array<ArgPropType>();

export type Plasmic_315侧面步态分析报告__OverridesType = {
  root?: Flex__<"div">;
  textInput?: Flex__<typeof TextInput>;
  select?: Flex__<typeof Select>;
  textInput2?: Flex__<typeof TextInput>;
  textInput3?: Flex__<typeof TextInput>;
  textInput4?: Flex__<typeof TextInput>;
  textInput5?: Flex__<typeof TextInput>;
  dateTimePicker?: Flex__<typeof AntdDatePicker>;
  table?: Flex__<typeof RichTable>;
  table2?: Flex__<typeof RichTable>;
  table3?: Flex__<typeof RichTable>;
};

export interface Default_315侧面步态分析报告Props {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_315侧面步态分析报告__RenderFunc(props: {
  variants: Plasmic_315侧面步态分析报告__VariantsArgs;
  args: Plasmic_315侧面步态分析报告__ArgsType;
  overrides: Plasmic_315侧面步态分析报告__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});
  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "table.selectedRowKey",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRowKey", RichTable_Helpers)
      },
      {
        path: "table.selectedRow",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRow", RichTable_Helpers)
      },
      {
        path: "table.selectedRows",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRows", RichTable_Helpers)
      },
      {
        path: "table.selectedRowKeys",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRowKeys", RichTable_Helpers)
      },
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "select.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textInput2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "textInput3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "textInput4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "textInput5.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "dateTimePicker.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          "2024-03-16T03:57:00.326Z",

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "table2.selectedRowKey",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRowKey", RichTable_Helpers)
      },
      {
        path: "table2.selectedRow",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRow", RichTable_Helpers)
      },
      {
        path: "table2.selectedRows",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRows", RichTable_Helpers)
      },
      {
        path: "table2.selectedRowKeys",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRowKeys", RichTable_Helpers)
      },
      {
        path: "table3.selectedRowKey",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRowKey", RichTable_Helpers)
      },
      {
        path: "table3.selectedRow",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRow", RichTable_Helpers)
      },
      {
        path: "table3.selectedRows",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRows", RichTable_Helpers)
      },
      {
        path: "table3.selectedRowKeys",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("selectedRowKeys", RichTable_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    query: usePlasmicDataOp(() => {
      return {
        sourceId: "97cRALkU7y1FzyPHZCgGKa",
        opId: "818b239a-345a-44a8-8637-7c7429cfab83",
        userArgs: {},
        cacheKey: `plasmic.$.818b239a-345a-44a8-8637-7c7429cfab83.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    query2: usePlasmicDataOp(() => {
      return {
        sourceId: "97cRALkU7y1FzyPHZCgGKa",
        opId: "2ce954ac-39eb-4770-a408-12e06ef49123",
        userArgs: {},
        cacheKey: `plasmic.$.2ce954ac-39eb-4770-a408-12e06ef49123.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    query4: usePlasmicDataOp(() => {
      return {
        sourceId: "97cRALkU7y1FzyPHZCgGKa",
        opId: "bf6445bc-8d97-41f0-9496-078d5fdcda0b",
        userArgs: {},
        cacheKey: `plasmic.$.bf6445bc-8d97-41f0-9496-078d5fdcda0b.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___4SwRu)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___7CxyH)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"195px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/c_vevaluatesingle/images/组9381Png.png",
                fullWidth: 1231,
                fullHeight: 285,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__b2J2J
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0FB5AB" }}
                >
                  {"\u4fa7\u9762\u6b65\u6001\u5206\u6790\u62a5\u544a"}
                </span>
              </React.Fragment>
            </div>
            <section
              className={classNames(projectcss.all, sty.section__wQoex)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__q8PtW)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xizCu
                )}
              >
                {"\u59d3\u540d\uff1a"}
              </div>
              <TextInput
                data-plasmic-name={"textInput"}
                data-plasmic-override={overrides.textInput}
                autoFocus={false}
                className={classNames("__wab_instance", sty.textInput)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["textInput", "value"])(
                    (e => e.target?.value).apply(null, eventArgs)
                  );
                }}
                placeholder={"\u8bf7\u8f93\u5165..."}
                required={false}
                value={
                  generateStateValueProp($state, ["textInput", "value"]) ?? ""
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fzmF7
                )}
              >
                {"\u6027\u522b\uff1a"}
              </div>
              <Select
                data-plasmic-name={"select"}
                data-plasmic-override={overrides.select}
                className={classNames("__wab_instance", sty.select)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["select", "value"])(
                    eventArgs[0]
                  );
                }}
                options={(() => {
                  const __composite = [
                    { value: null, label: null },
                    { value: null, label: null }
                  ];
                  __composite["0"]["value"] = "\u7537";
                  __composite["0"]["label"] = "\u7537";
                  __composite["1"]["value"] = "\u5973";
                  __composite["1"]["label"] = "\u5973";
                  return __composite;
                })()}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l4SdF
                    )}
                  >
                    {"\u8bf7\u9009\u62e9..."}
                  </div>
                }
                value={generateStateValueProp($state, ["select", "value"])}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mdBuo
                )}
              >
                {"\u5e74\u9f84\uff1a"}
              </div>
              <TextInput
                data-plasmic-name={"textInput2"}
                data-plasmic-override={overrides.textInput2}
                autoFocus={false}
                className={classNames("__wab_instance", sty.textInput2)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["textInput2", "value"])(
                    (e => e.target?.value).apply(null, eventArgs)
                  );
                }}
                placeholder={"\u8bf7\u8f93\u5165..."}
                required={false}
                value={
                  generateStateValueProp($state, ["textInput2", "value"]) ?? ""
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cTfXg
                )}
              >
                {"\u8eab\u9ad8\uff1a"}
              </div>
              <TextInput
                data-plasmic-name={"textInput3"}
                data-plasmic-override={overrides.textInput3}
                autoFocus={false}
                className={classNames("__wab_instance", sty.textInput3)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["textInput3", "value"])(
                    (e => e.target?.value).apply(null, eventArgs)
                  );
                }}
                placeholder={"\u8bf7\u8f93\u5165..."}
                required={false}
                value={
                  generateStateValueProp($state, ["textInput3", "value"]) ?? ""
                }
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___24FpM)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__d23CM
                )}
              >
                {"\u624b\u673a\uff1a"}
              </div>
              <TextInput
                data-plasmic-name={"textInput4"}
                data-plasmic-override={overrides.textInput4}
                autoFocus={false}
                className={classNames("__wab_instance", sty.textInput4)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["textInput4", "value"])(
                    (e => e.target?.value).apply(null, eventArgs)
                  );
                }}
                placeholder={"\u8bf7\u8f93\u5165..."}
                required={false}
                value={
                  generateStateValueProp($state, ["textInput4", "value"]) ?? ""
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xdKyj
                )}
              >
                {"\u5c31\u8bca\u53f7\uff1a"}
              </div>
              <TextInput
                data-plasmic-name={"textInput5"}
                data-plasmic-override={overrides.textInput5}
                autoFocus={false}
                className={classNames("__wab_instance", sty.textInput5)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["textInput5", "value"])(
                    (e => e.target?.value).apply(null, eventArgs)
                  );
                }}
                placeholder={"\u8bf7\u8f93\u5165..."}
                required={false}
                value={
                  generateStateValueProp($state, ["textInput5", "value"]) ?? ""
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ja4Zm
                )}
              >
                {"\u53d7\u6d4b\u65f6\u95f4\uff1a"}
              </div>
              {(() => {
                const child$Props = {
                  className: classNames("__wab_instance", sty.dateTimePicker),
                  defaultValue: "2024-03-16T03:57:00.326Z",
                  disabled: false,
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "value",
                    ["dateTimePicker", "value"],
                    AntdDatePicker_Helpers
                  ),
                  picker: "date",
                  popupScopeClassName: sty["dateTimePicker__datePickerPopup"],
                  showTime: true,
                  value: generateStateValueProp($state, [
                    "dateTimePicker",
                    "value"
                  ])
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "dateTimePicker.value"
                    }
                  ],
                  [],
                  AntdDatePicker_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdDatePicker
                    data-plasmic-name={"dateTimePicker"}
                    data-plasmic-override={overrides.dateTimePicker}
                    {...child$Props}
                  />
                );
              })()}
            </div>
            {(() => {
              const child$Props = {
                canSelectRows: "none",
                className: classNames("__wab_instance", sty.table),
                data: (() => {
                  try {
                    return $queries.query;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })(),
                defaultSize: "large",
                fields: (() => {
                  const __composite = [
                    { key: "name", fieldId: "name", title: null },
                    { key: "description", fieldId: "description", title: null },
                    { key: "updated_at", fieldId: "updated_at", title: null },
                    { key: "price", fieldId: "price", title: null },
                    {
                      key: "created_at",
                      fieldId: "created_at",
                      isHidden: null
                    },
                    { key: "user_id", fieldId: "user_id", isHidden: null },
                    {
                      key: "order_date",
                      fieldId: "order_date",
                      isHidden: null
                    },
                    {
                      key: "product_id",
                      fieldId: "product_id",
                      isHidden: null
                    },
                    {
                      key: "category_id",
                      fieldId: "category_id",
                      isHidden: null
                    },
                    { key: "is_active", fieldId: "is_active", isHidden: null },
                    {
                      key: "stock_quantity",
                      fieldId: "stock_quantity",
                      isHidden: null
                    },
                    {
                      key: "low_stock_threshold",
                      fieldId: "low_stock_threshold",
                      isHidden: null
                    },
                    { key: "image_url", fieldId: "image_url", isHidden: null },
                    { key: "brand", fieldId: "brand", isHidden: null },
                    { key: "sku", fieldId: "sku", isHidden: null }
                  ];
                  __composite["0"]["title"] = "\u65f6\u7a7a\u53c2\u6570";
                  __composite["1"]["title"] = "\u5de6/\u53f3";
                  __composite["2"]["title"] = "\u6570\u503c";
                  __composite["3"]["title"] = "\u53c2\u8003\u8303\u56f4";
                  __composite["4"]["isHidden"] = true;
                  __composite["5"]["isHidden"] = true;
                  __composite["6"]["isHidden"] = true;
                  __composite["7"]["isHidden"] = true;
                  __composite["8"]["isHidden"] = true;
                  __composite["9"]["isHidden"] = true;
                  __composite["10"]["isHidden"] = true;
                  __composite["11"]["isHidden"] = true;
                  __composite["12"]["isHidden"] = true;
                  __composite["13"]["isHidden"] = true;
                  __composite["14"]["isHidden"] = true;
                  return __composite;
                })(),
                hideColumnPicker: true,
                hideDensity: true,
                hideExports: true,
                hideSearch: true,
                onRowSelectionChanged: async (...eventArgs: any) => {
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRowKey",
                    ["table", "selectedRowKey"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRow",
                    ["table", "selectedRow"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRows",
                    ["table", "selectedRows"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRowKeys",
                    ["table", "selectedRowKeys"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                },
                pageSize: 14,
                scopeClassName: sty["table__instance"],
                selectedRowKey: generateStateValueProp($state, [
                  "table",
                  "selectedRowKey"
                ]),
                selectedRowKeys: generateStateValueProp($state, [
                  "table",
                  "selectedRowKeys"
                ]),
                themeResetClassName: classNames(
                  projectcss.root_reset,
                  projectcss.root_reset_tags,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "selectedRowKey",
                    plasmicStateName: "table.selectedRowKey"
                  },
                  {
                    name: "selectedRow",
                    plasmicStateName: "table.selectedRow"
                  },
                  {
                    name: "selectedRows",
                    plasmicStateName: "table.selectedRows"
                  },
                  {
                    name: "selectedRowKeys",
                    plasmicStateName: "table.selectedRowKeys"
                  }
                ],
                [],
                RichTable_Helpers ?? {},
                child$Props
              );

              return (
                <RichTable
                  data-plasmic-name={"table"}
                  data-plasmic-override={overrides.table}
                  {...child$Props}
                />
              );
            })()}
            <section
              className={classNames(projectcss.all, sty.section__adMiT)}
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__tyJbN)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"1510px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/c_vevaluatesingle/images/侧面步态分析高亚芹出院右1510111374320240308035618Jpg.jpg",
                fullWidth: 700,
                fullHeight: 497,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wsMTi
              )}
            >
              {
                "\u6b65\u6001\u5468\u671f\uff1a\u884c\u8d70\u8fc7\u7a0b\u4e2d\u4e00\u4fa7\u8db3\u8ddf\u7740\u5730\u81f3\u8be5\u4fa7\u8db3\u8ddf\u518d\u6b21\u7740\u5730\u6240\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002\n\u6b65\u9891\uff1a       \u4e24\u817f\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u4ea4\u66ff\u7684\u6b21\u6570\u3002\n\u6b65\u901f\uff1a       \u5355\u4f4d\u65f6\u95f4\u5185\u6240\u884c\u8fdb\u7684\u8ddd\u79bb\u3002\n\u8de8\u6b65\u901f\u5ea6\uff1a\u4e00\u4e2a\u6b65\u6001\u5468\u671f\u5185\u8ddd\u79bb\u548c\u65f6\u95f4\u7684\u6bd4\u503c\u3002\n\u6b65\u5e45\uff1a       \u540c\u4e00\u811a\u638c\u4e24\u6b21\u7740\u5730\u65f6\u95f4\u9694\u7684\u8ddd\u79bb\u3002\n\u6b65\u957f\uff1a       \u4e00\u4fa7\u811a\u638c\u843d\u5730\u5230\u53e6\u4e00\u811a\u638c\u843d\u5730\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\u6b65\u9ad8\uff1a       \u884c\u8d70\u8fc7\u7a0b\u4e2d\u8db3\u638c\u8ddd\u79bb\u5730\u9762\u7684\u8ddd\u79bb\u3002\n\u7ad9\u7acb\u9879\uff1a   \u6b65\u6001\u5468\u671f\u4e2d\u7684\u627f\u91cd\u671f\uff0c\u4ece\u8db3\u8ddf\u7740\u5730\u5f00\u59cb\uff0c\u81f3\u540c\u4fa7\u8db3\u8dbe\u79bb\u5730\u7ed3\u675f\u3002\n\u6446\u52a8\u9879\uff1a   \u6b65\u6001\u5468\u671f\u4e2d\u5411\u524d\u8fc8\u8fdb\u7684\u8fc7\u7a0b\uff0c\u4ece\u8db3\u8dbe\u79bb\u5f00\u5730\u9762\u5f00\u59cb\uff0c\u81f3\u540c\u4fa7\u8db3\u8ddf\u518d\u6b21\u7740\u5730\u524d\u7ed3\u675f\u3002\n\u53cc\u652f\u6491\u9879\uff1a\u6b65\u884c\u5468\u671f\u4e2d\uff0c\u5f53\u4e00\u6b21\u4e0b\u80a2\u5b8c\u6210\u8db3\u8ddf\u62ac\u8d77\u5230\u8db3\u5c16\u4e0b\u8e6c\u8e0f\u79bb\u5f00\u5730\u9762\u7684\u65f6\u671f\u5185\uff0c\u53e6\u4e00\u4fa7\u4e0b\u80a2\u540c\u65f6\u8fdb\u884c\u8db3\u8ddf\u7740\u5730\u5168\u8db3\u5e95\u7740\u5730\u52a8\u4f5c\uff0c\u5f62\u6210\u4e86\u53cc\u652f\u6491\u9879\u3002"
              }
            </div>
            <section
              className={classNames(projectcss.all, sty.section__xFcHu)}
            />

            {(() => {
              const child$Props = {
                className: classNames("__wab_instance", sty.table2),
                data: (() => {
                  try {
                    return $queries.query2;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })(),
                fields: (() => {
                  const __composite = [
                    { key: "name", fieldId: "name", title: null },
                    { key: "product_id", fieldId: "product_id", title: null },
                    { key: "category_id", fieldId: "category_id", title: null },
                    {
                      key: "created_at",
                      fieldId: "created_at",
                      isHidden: null
                    },
                    {
                      key: "description",
                      fieldId: "description",
                      isHidden: null
                    },
                    { key: "price", fieldId: "price", title: null },
                    { key: "is_active", fieldId: "is_active", isHidden: null },
                    {
                      key: "stock_quantity",
                      fieldId: "stock_quantity",
                      title: null
                    },
                    {
                      key: "low_stock_threshold",
                      fieldId: "low_stock_threshold",
                      title: null
                    },
                    { key: "updated_at", fieldId: "updated_at", title: null },
                    { key: "image_url", fieldId: "image_url", isHidden: null },
                    { key: "brand", fieldId: "brand", isHidden: null },
                    { key: "sku", fieldId: "sku", isHidden: null }
                  ];
                  __composite["0"]["title"] = "\u6d3b\u52a8\u53c2\u6570";
                  __composite["1"]["title"] = "\u6d3b\u52a8\u8303\u56f4";
                  __composite["2"]["title"] = "\u5e73\u5747\u503c";
                  __composite["3"]["isHidden"] = true;
                  __composite["4"]["isHidden"] = true;
                  __composite["5"]["title"] = "\u4e00\u5206\u4f4d\u6570";
                  __composite["6"]["isHidden"] = true;
                  __composite["7"]["title"] = "\u4e2d\u4f4d\u6570";
                  __composite["8"]["title"] = "\u4e09\u5206\u4f4d\u6570";
                  __composite["9"]["title"] = "\u53c2\u8003\u503c";
                  __composite["10"]["isHidden"] = true;
                  __composite["11"]["isHidden"] = true;
                  __composite["12"]["isHidden"] = true;
                  return __composite;
                })(),
                hideColumnPicker: true,
                hideExports: true,
                hideSearch: true,
                onRowSelectionChanged: async (...eventArgs: any) => {
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRowKey",
                    ["table2", "selectedRowKey"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRow",
                    ["table2", "selectedRow"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRows",
                    ["table2", "selectedRows"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRowKeys",
                    ["table2", "selectedRowKeys"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                },
                pageSize: 12,
                scopeClassName: sty["table2__instance"],
                selectedRowKey: generateStateValueProp($state, [
                  "table2",
                  "selectedRowKey"
                ]),
                selectedRowKeys: generateStateValueProp($state, [
                  "table2",
                  "selectedRowKeys"
                ]),
                themeResetClassName: classNames(
                  projectcss.root_reset,
                  projectcss.root_reset_tags,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "selectedRowKey",
                    plasmicStateName: "table2.selectedRowKey"
                  },
                  {
                    name: "selectedRow",
                    plasmicStateName: "table2.selectedRow"
                  },
                  {
                    name: "selectedRows",
                    plasmicStateName: "table2.selectedRows"
                  },
                  {
                    name: "selectedRowKeys",
                    plasmicStateName: "table2.selectedRowKeys"
                  }
                ],
                [],
                RichTable_Helpers ?? {},
                child$Props
              );

              return (
                <RichTable
                  data-plasmic-name={"table2"}
                  data-plasmic-override={overrides.table2}
                  {...child$Props}
                />
              );
            })()}
            <section
              className={classNames(projectcss.all, sty.section__vz5Ol)}
            />

            {(() => {
              const child$Props = {
                canSelectRows: "none",
                className: classNames("__wab_instance", sty.table3),
                data: (() => {
                  try {
                    return $queries.query4;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })(),
                defaultSize: "large",
                fields: (() => {
                  const __composite = [
                    {
                      key: "order_detail_id",
                      fieldId: "order_detail_id",
                      title: null
                    },
                    { key: "product_id", fieldId: "product_id", title: null },
                    { key: "quantity", fieldId: "quantity", title: null },
                    { key: "order_id", fieldId: "order_id", isHidden: null },
                    { key: "price", fieldId: "price", isHidden: null }
                  ];
                  __composite["0"]["title"] =
                    "\u5173\u8282\u6d3b\u52a8\u5206\u671f";
                  __composite["1"]["title"] =
                    "\u7ad9\u7acb\u76f8\u6d3b\u52a8\u8303\u56f4";
                  __composite["2"]["title"] =
                    "\u6446\u52a8\u9879\u6d3b\u52a8\u8303\u56f4";
                  __composite["3"]["isHidden"] = true;
                  __composite["4"]["isHidden"] = true;
                  return __composite;
                })(),
                hideColumnPicker: true,
                hideDensity: true,
                hideExports: true,
                hideSearch: true,
                onRowSelectionChanged: async (...eventArgs: any) => {
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRowKey",
                    ["table3", "selectedRowKey"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRow",
                    ["table3", "selectedRow"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRows",
                    ["table3", "selectedRows"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "selectedRowKeys",
                    ["table3", "selectedRowKeys"],
                    RichTable_Helpers
                  ).apply(null, eventArgs);
                },
                pageSize: 6,
                pagination: true,
                scopeClassName: sty["table3__instance"],
                selectedRowKey: generateStateValueProp($state, [
                  "table3",
                  "selectedRowKey"
                ]),
                selectedRowKeys: generateStateValueProp($state, [
                  "table3",
                  "selectedRowKeys"
                ]),
                themeResetClassName: classNames(
                  projectcss.root_reset,
                  projectcss.root_reset_tags,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "selectedRowKey",
                    plasmicStateName: "table3.selectedRowKey"
                  },
                  {
                    name: "selectedRow",
                    plasmicStateName: "table3.selectedRow"
                  },
                  {
                    name: "selectedRows",
                    plasmicStateName: "table3.selectedRows"
                  },
                  {
                    name: "selectedRowKeys",
                    plasmicStateName: "table3.selectedRowKeys"
                  }
                ],
                [],
                RichTable_Helpers ?? {},
                child$Props
              );

              return (
                <RichTable
                  data-plasmic-name={"table3"}
                  data-plasmic-override={overrides.table3}
                  {...child$Props}
                />
              );
            })()}
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__hSiam)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"789px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/c_vevaluatesingle/images/_2Jpg.jpg",
                fullWidth: 245,
                fullHeight: 187,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ysoUc
              )}
            >
              {
                "\u819d\u5173\u8282\u4f38\u5c55-\u5c48\u66f2\uff080\u00b0\uff5e150\u00b0\uff09\n\u8f74\u5fc3\u4f4d\u4e8e\u819d\u5173\u8282\u7684\u8153\u9aa8\u5c0f\u5934\uff0c\u56fa\u5b9a\u81c2\u4e0e\u80a1\u9aa8\u957f\u8f74\u5e73\u884c\uff0c\u79fb\u52a8\u81c2\u4e0e\u8153\u9aa8\u957f\u8f74\u5e73\u884c\u3002"
              }
            </div>
            <section
              className={classNames(projectcss.all, sty.section__raxy2)}
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__zqiXz)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"844px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/c_vevaluatesingle/images/_33Jpg.jpg",
                fullWidth: 500,
                fullHeight: 500,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bm5S8
              )}
            >
              {
                "\u9acb\u5173\u8282\u5c48\u66f2\uff080\u00b0\uff5e120\u00b0\uff09\u9acb\u5173\u8282\u4f38\u5c55\uff080\u00b0\uff5e15\u00b0-30\u00b0\uff09\n\u8f74\u5fc3\u4f4d\u4e8e\u80a1\u9aa8\u5927\u8f6c\u5b50\u4fa7\u9762\uff0c\u56fa\u5b9a\u81c2\u6307\u5411\u9aa8\u76c6\u4fa7\u9762\uff0c\u79fb\u52a8\u81c2\u4e0e\u80a1\u9aa8\u957f\u8f74\u5e73\u884c\u3002\n\u8de8\u6b65\u901f\u5ea6\uff1a\u4e00\u4e2a\u6b65\u6001\u5468\u671f\u5185\u8ddd\u79bb\u548c\u65f6\u95f4\u7684\u6bd4\u503c\u3002\n\u9acb\u5173\u8282\u5916\u5c55\uff080\u00b0\uff5e45\u00b0\uff09\u9acb\u5173\u8282\u5185\u6536\uff080\u00b0\uff5e35\u00b0\uff09\n\u8f74\u5fc3\u4f4d\u4e8e\u9ac2\u524d\u4e0a\u68d8\uff0c\u56fa\u5b9a\u81c2\u4f4d\u4e8e\u4e24\u9ac2\u524d\u4e0a\u68d8\u7684\u8fde\u7ebf\u4e0a\uff0c\u79fb\u52a8\u81c2\u4e0e\u80a1\u9aa8\u957f\u8f74\u5e73\u884c\u3002\n\u9acb\u5173\u8282\u5185\u65cb\uff080\u00b0\uff5e35\u00b0\uff09\u9acb\u5173\u8282\u5916\u65cb\uff080\u00b0\uff5e45\u00b0\uff09\n\u8f74\u5fc3\u7f6e\u4e8e\u80eb\u9aa8\u5e73\u53f0\u7684\u4e2d\u70b9\uff0c\u56fa\u5b9a\u81c2\u548c\u79fb\u52a8\u81c2\u4e0e\u80eb\u9aa8\u957f\u8f74\u5e73\u884c\u3002\u5f53\u9acb\u5173\u8282\u5185\u65cb\u65f6\u56fa\u5b9a\u81c2\u4ecd\u4fdd\u7559\u4e8e\u539f\u6765\u7684\u4f4d\u7f6e\u4e0e\u5730\u9762\u5782\u76f4\uff0c\u79fb\u52a8\u81c2\u5219\u8ddf\u968f\u80eb\u9aa8\u79fb\u52a8\u3002"
              }
            </div>
            <section
              className={classNames(projectcss.all, sty.section___6Waj)}
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__bwZ2Q)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"986px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/c_vevaluatesingle/images/_555Jpg.jpg",
                fullWidth: 639,
                fullHeight: 371,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ex2Gg
              )}
            >
              {
                "\u8e1d\u5173\u8282\u80cc\u5c48\uff080\u00b0\uff5e20\u00b0\uff09\u8e1d\u5173\u8282\u8dd6\u5c48\uff080\u00b0\uff5e45\u00b0\uff09\n\u8f74\u5fc3\u4f4d\u4e8e\u8e1d\u4e2d\u70b9\u4e0b\u7ea62.5\u5398\u7c73\uff0c\u56fa\u5b9a\u81c2\u6307\u4e0e\u8153\u9aa8\u957f\u8f74\u5e73\u884c\uff0c\u79fb\u52a8\u81c2\u4e0e\u7b2c\u4e94\u8dd6\u9aa8\u5e73\u884c\u3002\n\u8e1d\u5173\u8282\u5185\u7ffb\uff080\u00b0\uff5e30\u00b0\uff09\u8e1d\u5173\u8282\u5916\u7ffb\uff080\u00b0\uff5e30\u00b0\uff09\n\u5185\u7ffb\u8f74\u5fc3\u4f4d\u4e8e\u8ddf\u9aa8\u5916\u4fa7\u9762\uff0c\u56fa\u5b9a\u81c2\u4e0e\u80eb\u9aa8\u957f\u8f74\u5e73\u884c\uff0c\u79fb\u52a8\u81c2\u4e0e\u8db3\u8ddf\u8dd6\u9762\u5e73\u884c\u3002\n\u5916\u7ffb\u8f74\u5fc3\u4f4d\u4e8e\u8dd6\u8dbe\u5173\u8282\u5185\u4fa7\u9762\u7684\u91cd\u70b9\uff0c\u56fa\u5b9a\u81c2\u4e0e\u80eb\u9aa8\u957f\u8f74\u5e73\u884c\uff0c\u79fb\u52a8\u81c2\u4e0e\u8db3\u8ddf\u8dd6\u9762\u5e73\u884c\u3002"
              }
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "textInput",
    "select",
    "textInput2",
    "textInput3",
    "textInput4",
    "textInput5",
    "dateTimePicker",
    "table",
    "table2",
    "table3"
  ],
  textInput: ["textInput"],
  select: ["select"],
  textInput2: ["textInput2"],
  textInput3: ["textInput3"],
  textInput4: ["textInput4"],
  textInput5: ["textInput5"],
  dateTimePicker: ["dateTimePicker"],
  table: ["table"],
  table2: ["table2"],
  table3: ["table3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  textInput: typeof TextInput;
  select: typeof Select;
  textInput2: typeof TextInput;
  textInput3: typeof TextInput;
  textInput4: typeof TextInput;
  textInput5: typeof TextInput;
  dateTimePicker: typeof AntdDatePicker;
  table: typeof RichTable;
  table2: typeof RichTable;
  table3: typeof RichTable;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_315侧面步态分析报告__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_315侧面步态分析报告__VariantsArgs;
    args?: Plasmic_315侧面步态分析报告__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_315侧面步态分析报告__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_315侧面步态分析报告__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmic_315侧面步态分析报告__ArgProps,
          internalVariantPropNames: Plasmic_315侧面步态分析报告__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_315侧面步态分析报告__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName =
      "Plasmic_315\u4fa7\u9762\u6b65\u6001\u5206\u6790\u62a5\u544a";
  } else {
    func.displayName = `Plasmic_315侧面步态分析报告.${nodeName}`;
  }
  return func;
}

export const Plasmic_315侧面步态分析报告 = Object.assign(
  // Top-level Plasmic_315侧面步态分析报告 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textInput: makeNodeComponent("textInput"),
    select: makeNodeComponent("select"),
    textInput2: makeNodeComponent("textInput2"),
    textInput3: makeNodeComponent("textInput3"),
    textInput4: makeNodeComponent("textInput4"),
    textInput5: makeNodeComponent("textInput5"),
    dateTimePicker: makeNodeComponent("dateTimePicker"),
    table: makeNodeComponent("table"),
    table2: makeNodeComponent("table2"),
    table3: makeNodeComponent("table3"),

    // Metadata about props expected for Plasmic_315侧面步态分析报告
    internalVariantProps: Plasmic_315侧面步态分析报告__VariantProps,
    internalArgProps: Plasmic_315侧面步态分析报告__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmic_315侧面步态分析报告;
/* prettier-ignore-end */
